对于数据量较大并且已排序的数通常使用二分法实现较高效率的查找，假设数据是按升序排列（当然也可以是降序排列）的，对于要查找的值x，从序列的中间位置开始查找，如果
当前位置值等于x，则查找成功；若x小于当前位置值，则在数列的前半段中查找，若x大于当前位置值则在数列的后半段中继续查找，直到找到或无相应的值为止。


include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define size 10
int g[size] = { 0,1,2,3,4,5,6,7,8,9 };
int main()
{
	int x = 10;
	x = search(x);
	printf("%d\n", x);
	system("pause");
	return 0;
}
int search(int x)
{
	int low = 0;
	int high = size - 1;
	int mid;
	while (low <= high)
	{
		mid = (low + high) / 2;
		if (g[mid] == x)
			return mid;
		else if (g[mid] < x)
			low = mid + 1;
		else if (g[mid] > x)
			high = mid - 1;
	}
	return -1;
}
