针对待排序记录的关键字的每相邻两个元素进行的比较，发现两个记录的次序相反时即进行交换，直到没有反序的记录为止。
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
void maopao(int*list, int length);
void Swap(int *low, int *high);
int main()
{
	int list[10];
	int i;
	printf("please input:\n");
	for(i=0;i<10;i++)
	{
		scanf("%d", &list[i]);
	}
	maopao(list,10);
	printf("output:\n");
	for (i =0;i<10;i++)
	{
		printf("%d\n", list[i]);
	}
	system("pause");
	return 0;
}

void maopao(int*list, int length)
{
	int i, j;
	for (i = 0;i < length;i++)//从0开始循环
	{
		for (j = length - 1;j >= i;j--)//从尾部开始循环，直到i位置
		{
			if (list[j - 1] <= list[j])前一个小于后一个，则交换，不断交换，直到第i为止
			{
				Swap(&list[j - 1], &list[j]);
			}
		}
	}
}
void Swap(int *low, int *high)//交换两个数，用指针才有效，避免退出后数据才修改
{
	int temp;
	temp=*low;
	*low = *high;
	*high = temp;
}
