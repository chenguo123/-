抽象：它是一个去除对象中不重要的细节的过程，只有那些描述了对象的本质特征的关键点才被保留。抽象是一种设计活动，其它的概念都是提供抽象的OOP特性
类：类是一种用户定义类型，就好像是int这样的内置类型一样。内置类型已经有了一套完善的针对它的操作（如算术运算符），类机制也必须允许程序员规定他所定义的类
能够完善的针对它的操作（如算术运算等），类机制也必须允许程序员规定他所定义的类能进行的操作，类里面的任何东西被称为类的成员。
对象：某个类的一个特定变量，就像j可能是int类型的一个变量一样，对象也可以被称作类的实例。
封装：把类型、数据和函数组合在一起，组成一个类。在C语言中，头文件就是一个非常脆弱的封装实例，它之所以是一个微不足道的封装例子，是因为它的组合形式是纯词法
意义上的，编译器并不知道头文件是一个语义单位。
继承：这是一个很大的概念，允许类从一个更简单的基类中接收数据结构和函数。派生类获得基类的数据和操作，并可以根据需要对它们进行改写，也可以在派生类中增加新的数据
和函数成员。在C语言里不存在继承的概念，没有任何东西可以模拟这个特性。
